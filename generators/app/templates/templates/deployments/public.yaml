apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "<%= name %>.fullname" . }}-<%= workload.name %>
  labels:
    app: {{ template "<%= name %>.name" . }}-<%= workload.name %>
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "<%= name %>.name" . }}-<%= workload.name %>
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "<%= name %>.fullname" . }}-<%= workload.name %>
          image: {{ .Values.images.<%= workload.name %>.repository }}:{{ .Values.images.<%= workload.name %>.tag }}
          imagePullPolicy: {{ .Values.images.<%= workload.name %>.pullPolicy }}
          ports:
            - name: container
              containerPort: <%= workload.port %><% if (workload.volumes.length) { %>
          volumeMounts:<% for (var i = 0; i < workload.volumes.length; i++) { var volume = workload.volumes[i]; %>
            - name: <%= volume.name %>
              mountPath: '<%= volume.mountPath %>'
              subPath: <%= volume.subPath %><% } if (volume.readOnly) { %>
              readOnly: true<% }} %>
          env: []
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}<% if (workload.volumes.length) { %>
      volumes:<% for (var i = 0; i < workload.volumes.length; i++) { var volume = workload.volumes[i]; %>
        - name: <%= volume.name %>
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "<%= name %>.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}<% }} %>

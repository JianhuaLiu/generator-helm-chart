apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "<%= name %>.fullname" . }}-<%= workload.name %>
  labels:
    app: {{ template "<%= name %>.name" . }}-<%= workload.name %>
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "<%= name %>.name" . }}-<%= workload.name %>
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ template "<%= name %>.fullname" . }}-<%= workload.name %>
          image: {{ .Values.images.<%= workload.name %>.repository }}:{{ .Values.images.<%= workload.name %>.tag }}
          imagePullPolicy: {{ .Values.images.<%= workload.name %>.pullPolicy }}
          ports:
            - name: container
              containerPort: <%= workload.port %><% if (workload.volumes.length) { %>
          volumeMounts:<% for (var i = 0; i < workload.volumes.length; i++) { var volume = workload.volumes[i]; %>
            - name: <%= volume.name %>
              mountPath: '<%= volume.mountPath %>'<% if (volume.subPath) { %>
              subPath: <%= volume.subPath %><% } if (volume.readOnly) { %>
              readOnly: true<% }}} %>
          env: []<% if (workload.volumes.length) { %>
      volumes:<% for (var i = 0; i < workload.volumes.length; i++) { var volume = workload.volumes[i]; %>
        - name: <%= volume.name %>
          {{- if .Values.persistence.enabled }}
          {{- if (eq .Values.persistence.type "persistentVolumeClaim") }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "<%= name %>.fullname" . ) }}
          {{- elif (eq .Values.persistence.type "awsElasticBlockStore") }}
          awsElasticBlockStore:
            volumeID: {{ .Values.persistence.volumeId }}
            fsType: {{ .Values.persistence.fsType }}
          {{- elif (eq .Values.persistence.type "azureDisk") }}
          azureDisk:
            cachingMode: {{ .Values.persistence.cachingMode }}
            diskName: {{ .Values.persistence.diskName }}
            diskURI: {{ .Values.persistence.diskUri }}
            fsType: {{ .Values.persistence.fsType }}
            kind: {{ .Values.persistence.diskKind }}
            readOnly: {{ .Values.persistence.readOnly | quote }}
          {{- elif (eq .Values.persistence.type "azureFile") }}
          azureFile:
          {{- elif (eq .Values.persistence.type "cephfs") }}
          cephfs:
          {{- elif (eq .Values.persistence.type "flocker") }}
          flocker:
          {{- elif (eq .Values.persistence.type "gcePersistentDisk") }}
          gcePersistentDisk:
          {{- elif (eq .Values.persistence.type "glusterfs") }}
          glusterfs:
          {{- elif (eq .Values.persistence.type "local") }}
          local:
          {{- elif (eq .Values.persistence.type "nfs") }}
          nfs:
          {{- elif (eq .Values.persistence.type "portworxVolume") }}
          portworxVolume:
          {{- elif (eq .Values.persistence.type "quobyte") }}
          quobyte:
          {{- elif (eq .Values.persistence.type "rbd") }}
          rbd:
          {{- elif (eq .Values.persistence.type "scaleIO") }}
          scaleIO:
          {{- elif (eq .Values.persistence.type "storageOS") }}
          storageOS:
          {{- elif (eq .Values.persistence.type "vsphereVolume") }}
          vsphereVolume:
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}<% }} %>
